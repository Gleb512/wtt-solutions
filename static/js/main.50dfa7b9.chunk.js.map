{"version":3,"sources":["components/Login/Login.module.css","components/List/List.module.css","redux/login-reducer.js","utils/utils.js","redux/contact-reducer.js","redux/store.js","components/List/ListForm/ListForm.js","components/List/ListItem.js","components/List/List.js","components/Login/LoginForm.js","components/Login/Login.js","components/content.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","LOG","initialState","login","username","logAction","value","type","logFunc","dispatch","a","console","log","loginReducer","state","action","updateContactFunc","array","id","values","findIndex","arr","phone","MyCustomButton","props","component","NavLink","textValue","className","link","submit","onClick","this","to","label","React","Component","error","ADD","UPDATE","contacts","img","updateContactAction","object","contactReducer","Date","now","reducerPack","combineReducers","contact","form","formReducer","store","createStore","serializedState","localStorage","getItem","JSON","parse","err","loadState","applyMiddleware","thunkMiddleware","subscribe","stringify","setItem","saveState","getState","ListForm","reduxForm","enableReinitialize","handleSubmit","redirect","onSubmit","Field","name","placeholder","ListItem","useState","loading","show","image","setImage","useEffect","axios","get","then","result","request","responseURL","s","item","editBtn","width","height","viewBox","fill","xmlns","d","src","alt","call","href","path","render","editForm","initialValues","addContact","List","connect","contactFunc","contactObject","Fragment","header","info","bannerName","buttons","data","list","map","c","LoginForm","LoginContainer","Content","parameters","filter","find","parameter","includes","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.50dfa7b9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__2Px22\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"List_list__3ccy6\",\"item\":\"List_item__3ejfe\",\"header\":\"List_header__1aGJR\",\"info\":\"List_info__yip6f\",\"buttons\":\"List_buttons__228gl\",\"bannerName\":\"List_bannerName__2A2VU\",\"call\":\"List_call__1PMkm\",\"editBtn\":\"List_editBtn__3LOIy\",\"name\":\"List_name__2whyX\"};","const LOG = 'LOG'\n\nlet initialState = {\n    login: false,\n    username: null,\n}\n\n\n\n\nconst loginReducer = (state = initialState , action) => {\n    switch (action.type) {\n        case LOG:\n            return {\n                ...state,\n                login: action.value,\n                username: action.username ? action.username : null\n            };\n        default:\n            return state;\n    }\n}\n\n\nexport const logAction = (value, username) => ({type: LOG, value, username})\n\nexport const logFunc = (value, username) => {\n    return async (dispatch) => {\n        try {\n            await dispatch(logAction(value, username))\n        }catch (e) {\n            console.log(e)\n        }\n    }\n}\n\n\nexport default loginReducer;","import React from 'react'\nimport {NavLink} from \"react-router-dom\";\n\n// Update Contact helper\nexport function updateContactFunc(array, id, values){\n    array[array.findIndex(arr => arr.id === id)].username = values.username\n    array[array.findIndex(arr => arr.id === id)].phone = values.phone\n    return array\n}\n\n\n\n\n// Custom Button Component Implemented\n// The examples of usage with different\n// tags are in ListComponent (List.js), ListFormRedux (ListForm.js), LoginReduxForm (LoginForm.js)\nexport class MyCustomButton extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            component: this.props.component === 'a' ? NavLink : this.props.component,\n            textValue: this.props.textValue && this.props.textValue,\n            className: this.props.className && this.props.className,\n            link: this.props.link && this.props.link,\n            submit: this.props.submit & this.props.submit,\n            type: this.props.submit ? 'submit' : '',\n            onClick: this.props.onClick\n        }\n    }\n\n    render() {\n        return (\n            <>\n            <this.state.component\n                className={`${this.state.className}`}\n                to={this.state.link}\n                type={this.state.type}\n                label={this.state.type}\n                onClick={this.state.onClick}\n            >\n                    {this.state.textValue}\n            </this.state.component>\n            </>\n        );\n    }\n}\n\n\n\n//Hide ReduxForm Old Lifecycle warnings in App.js\nconst error = console.error;\nexport function logError(...parameters) {\n    let filter = parameters.find(parameter => {\n        return (\n            parameter.includes(\"Warning: %s is deprecated in StrictMode\")\n            || parameter.includes(\"Warning:\")\n        );\n    });\n    if(!filter) error(...parameters);\n}","import {updateContactFunc} from \"../utils/utils\";\n\nconst ADD = 'ADD'\nconst UPDATE = 'UPDATE'\n\nlet initialState = {\n    contacts: [\n        {id: 1, username: 'Alex Smith', img: 'https://picsum.photos/200', phone: '0939199372'},\n        {id: 2, username: 'Bread Stone', img: 'https://picsum.photos/200', phone: '0939199373'},\n        {id: 3, username: 'Cindy Snow', img: 'https://picsum.photos/200', phone: '0939199374'},\n        {id: 4, username: 'Daddy Doggy', img: 'https://picsum.photos/200', phone: '0939199375'},\n    ]\n}\n\n\n\n\nconst contactReducer = (state = initialState , action) => {\n    switch (action.type) {\n        case ADD:\n            return {\n                ...state,\n                contacts: [\n                    ...state.contacts,\n                    {\n                        ...action.object,\n                        id: Date.now(),\n                        img: 'https://picsum.photos/200',\n                    }]\n            };\n        case UPDATE:\n            return {\n                ...state,\n                contacts: updateContactFunc(state.contacts, action.id, action.object)\n            }\n        default:\n            return state;\n    }\n}\n\nexport const addContactAction = (object) => ({type: ADD, object})\nexport const updateContactAction = (object, id) => ({type: UPDATE, object, id})\n\n\n\nexport const contactFunc = (contactObject, id) => {\n    return async (dispatch) => {\n        try {\n            if(id && id !== null ){\n                await dispatch(updateContactAction(contactObject, id))\n            }else{\n                await dispatch(addContactAction(contactObject))\n            }\n        }catch (e) {\n            console.log(e)\n        }\n    }\n}\n\n\nexport default contactReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\"\nimport loginReducer from \"./login-reducer\";\nimport thunkMiddleware from \"redux-thunk\";\nimport {reducer as formReducer} from 'redux-form';\nimport contactReducer from \"./contact-reducer\";\n\n\n// Reducer Pack creating\nlet reducerPack = combineReducers({\n    login: loginReducer,\n    contact: contactReducer,\n    form: formReducer\n})\n\n// Connecting state to localstorage functionality\nconst loadState = () => {\n    try {\n        const serializedState = localStorage.getItem('state');\n        if (serializedState === null) {\n            return undefined;\n        } else {\n            return JSON.parse(serializedState);\n        }\n    } catch (err) {\n        return undefined;\n    }\n}\n\n\nlet store = createStore(\n    reducerPack,\n    loadState(),\n    applyMiddleware(thunkMiddleware)\n);\n\n\n\n// Connecting state to localstorage - continue...\nconst saveState = (state) => {\n    try {\n        const serializedState = JSON.stringify(state);\n        localStorage.setItem('state', serializedState);\n    } catch (err) {\n\n    }\n};\n\nstore.subscribe(() => {\n    const state = store.getState();\n    saveState(state);\n})\n\n\n// For Debug\n// window.store = store;\n\nexport default store;","import {Field, reduxForm} from \"redux-form\";\nimport {Redirect} from \"react-router-dom\";\nimport React from \"react\";\nimport {MyCustomButton} from \"../../../utils/utils\";\n\nconst ListFormRedux = (props) => {\n    const {handleSubmit} = (props);\n    if(props.redirect){\n        return <Redirect to={`/`} />\n    }\n    return (\n        <form className='modal' onSubmit={handleSubmit}>\n            <Field\n                name=\"username\"\n                component='input'\n                type=\"text\"\n                placeholder=\"Username\"\n            />\n            <Field\n                name=\"phone\"\n                component='input'\n                type=\"tel\"\n                placeholder=\"Phone\"\n            />\n            <Field\n                name=\"id\"\n                component='input'\n                type=\"hidden\"\n            />\n            <MyCustomButton component={'button'}\n                            textValue={'Submit'}\n                            className='button'\n                            submit={true}\n            />\n        </form>\n    )\n}\n\n\nconst ListForm = reduxForm ({\n    form: 'listForm',\n    enableReinitialize : false,\n}) (ListFormRedux)\n\nexport default ListForm","import React, {useEffect, useState} from 'react'\nimport {NavLink, Route} from \"react-router-dom\";\nimport ListForm from \"./ListForm/ListForm\";\nimport s from './List.module.css'\nimport axios from \"axios\";\n\nconst ListItem = (props) => {\n    const [loading, show] = useState(true);\n    const [image, setImage] = useState(null);\n    useEffect( ()=>{\n        if(props.contact){\n            axios.get(props.contact.img)\n                .then(function(result) {\n                    setImage(result.request.responseURL)\n                    show(false)\n                })\n        }\n    }, [props])\n    if(loading){\n        return <h1>Loading</h1>\n    }\n    return (\n        <div className={s.item} key={props.contact.id}>\n            <NavLink to={`/${props.contact.id}/edit`} className={s.editBtn} onClick={()=>{props.redirect(false)}}>\n                <svg width=\"15\" height=\"15\" viewBox=\"0 0 15 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M0 11.46V14.5C0 14.78 0.22 15 0.5 15H3.54C3.67 15 3.8 14.95 3.89 14.85L14.81 3.94L11.06 0.19L0.15 11.1C0.0500001 11.2 0 11.32 0 11.46Z\" fill=\"black\"/>\n                </svg>\n            </NavLink>\n            <img src={image} alt={'s.name'} />\n            <p className={s.name}>{props.contact.username}</p>\n            <a className={s.call} href={`tel:`+props.contact.phone}>\n                <svg width=\"19\" height=\"19\" viewBox=\"0 0 19 19\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M13.63 11.4L11.11 13.9C8.61002 12.47 6.54002 10.4 5.11002 7.9L7.61002 5.38C7.84002 5.14 7.94002 4.81 7.88002 4.48L7.13002 0.8C7.04002 0.34 6.63002 0 6.15002 0H2.00002C1.44002 0 0.970019 0.47 1.00002 1.03C1.17002 3.92 2.05002 6.63 3.43002 9C5.01002 11.73 7.28002 13.99 10 15.57C12.37 16.94 15.08 17.83 17.97 18C18.53 18.03 19 17.56 19 17V12.85C19 12.37 18.66 11.96 18.2 11.87L14.53 11.14C14.2 11.07 13.86 11.17 13.63 11.4Z\" fill=\"white\"/>\n                </svg>\n            </a>\n            <Route path={`/${props.contact.id}/edit`} render={() => <ListForm redirect={props.editForm}\n                                                                         initialValues={props.contact}\n                                                                         contact={props.contact}\n                                                                         onSubmit={props.addContact} />} />\n        </div>\n    )\n}\n\nexport default ListItem","import React, {useState} from 'react'\nimport {connect} from \"react-redux\";\nimport s from './List.module.css'\nimport {NavLink, Redirect, Route} from \"react-router-dom\";\nimport ListForm from \"./ListForm/ListForm\";\nimport {contactFunc} from \"../../redux/contact-reducer\";\nimport ListItem from \"./ListItem\";\nimport {logFunc} from \"../../redux/login-reducer\";\nimport {CSVLink} from \"react-csv\";\nimport {Button, MyCustomButton} from \"../../utils/utils\";\n\n\nconst ListComponent = (props) => {\n    const [editForm, redirect] = useState(false);\n    const addContact = values => {\n        const id = values.id !== null ? values.id : false\n        props.contactFunc(values, id)\n        redirect(true)\n    };\n    const logout = () => {\n        props.logFunc(false)\n    }\n    if(!props.login.login){\n        return <Redirect to={'/login'} />\n    }\n    return (\n        <React.Fragment>\n            <div className={s.header}>\n                <div className={s.info}>\n                    <p className={s.bannerName}>\n                        Hello, {props.login.username}\n                    </p>\n                    <MyCustomButton component={'button'}\n                                    textValue={'Logout'}\n                                    className={s.bannerName}\n                                    onClick={()=>{logout()}}/>\n                </div>\n                <div className={s.buttons}>\n                    <MyCustomButton component={'a'}\n                                    textValue={'New Contact'}\n                                    className='black-button'\n                                    link={'/new'}\n                                    onClick={()=>{redirect(false)}}\n                    />\n\n                    <CSVLink className='black-button' data={props.contacts}>\n                        Download CSV\n                    </CSVLink>\n                </div>\n            </div>\n            {/*<MyCustomButton component={'button'}*/}\n            {/*                textValue={'Download CSV'}*/}\n            {/*                className='black-button'*/}\n            {/*                link={'/new'}*/}\n            {/*                submit={true}*/}\n            {/*/>*/}\n            <div className={s.list}>\n                {props.contacts.map(c=>\n                    <ListItem contact={c} redirect={redirect}\n                              editForm={editForm} key={c.id}\n                              addContact={addContact} />\n                )}\n            </div>\n            <Route path={`/new`} render={() => <ListForm redirect={editForm} onSubmit={addContact} />} />\n        </React.Fragment>\n    )\n}\n\n\nlet mapStateToProps = state =>{\n    return{\n        contacts: state.contact.contacts,\n        login: state.login\n    }\n}\n\nconst List = connect(mapStateToProps, {contactFunc, logFunc})\n(ListComponent);\n\n\nexport default List","import React from 'react'\nimport {Field, reduxForm} from \"redux-form\";\nimport {MyCustomButton} from \"../../utils/utils\";\n\nconst LoginReduxForm = (props) => {\n    const {handleSubmit} = (props);\n    return (\n        <form className=\"form\" onSubmit={handleSubmit}>\n            <Field\n                name=\"username\"\n                component='input'\n                type=\"text\"\n                placeholder=\"What's your name?\"\n            />\n            <MyCustomButton component={'button'}\n                            textValue={'Submit'}\n                            className='button'\n                            submit={true}\n            />\n        </form>\n    )\n}\n\n\nconst LoginForm = reduxForm ({\n    form: 'loginForm',\n}) (LoginReduxForm)\n\nexport default LoginForm","import React from 'react'\nimport {connect} from \"react-redux\";\nimport s from './Login.module.css'\nimport LoginForm from \"./LoginForm\";\nimport {logFunc} from \"../../redux/login-reducer\";\nimport {Redirect} from \"react-router-dom\";\n\nconst Login = (props) => {\n    const submit = values => {\n        if(values.username){\n            props.logFunc(true, values.username)\n        }\n    };\n    if(props.login.login){\n        return <Redirect to={'/'} />\n    }\n    return (\n        <div className={s.login}>\n            <h1>SignIn</h1>\n            <LoginForm onSubmit={submit} />\n        </div>\n    )\n}\n\n\n\nlet mapStateToProps = state =>{\n    return{\n        login: state.login\n    }\n}\n\nconst LoginContainer = connect(mapStateToProps, {logFunc})\n(Login);\n\n\nexport default LoginContainer","import React from 'react'\nimport {Route, Switch} from \"react-router-dom\";\nimport List from \"./List/List\";\nimport LoginContainer from \"./Login/Login\";\n\nconst Content = () => {\n    return (\n        <div>\n            <div>\n                <Switch>\n                    <Route path='/login' render={() => <LoginContainer /> } />\n                    <Route path='/' render={() => <List /> } />\n                </Switch>\n            </div>\n        </div>\n    )\n}\n\n\n\nexport default Content","import './App.css';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\nimport React from \"react\";\nimport Content from \"./components/content\";\nimport {logError} from \"./utils/utils\";\n\n// Hide ReduxForm Old Lifecycle warnings\nconsole.error  = logError;\n\n// App Component\nfunction App() {\n  return (\n      <BrowserRouter>\n        <Provider store={store}>\n          <div className=\"App\">\n            <div className=\"container\">\n              <Content />\n            </div>\n          </div>\n        </Provider>\n      </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}